# -*- coding: utf-8 -*-
"""практическая 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14T5fEV5CdNQcRGWVow6a28PNbHyf0t2i

Практическая работа 1 
Шишкина Марина - АДЭУ-211
"""

class First:
  color = 'red'
  def out(self):
      print(self.color + '!')
obj1 = First()
obj2 = First()
print(obj1.color)
print(obj1.color)
obj1.out()
obj2.out()

class Second:
  color = 'red'
  form = 'circle'
  square = 36

  def changecolor(self,newcolor):
    self.color = newcolor
  def changeform(self,newform):
    self.form = newform
  def changesquare(self,newsquare):
    self.square = newsquare

obj1 = Second()
obj2 = Second()
obj3 = Second()

print(obj1.color, obj1.form, obj1.square)
print(obj2.color, obj2.form, obj2.square)
print(obj3.color, obj3.form, obj3.square)

obj1.changecolor('green')
obj2.changecolor('blue')
obj2.changeform('oval')
obj3.changecolor('yellow')
obj3.changeform('square')
obj3.changesquare(49)

print(obj1.color, obj1.form, obj1.square)
print(obj2.color, obj2.form, obj2.square)
print(obj3.color, obj3.form, obj3.square)

class A:
    def total(self, a):
        return 10 + int(a)
 
class B:
    def __init__(self):
        self.string = 'Hi'
    def total(self, a):
        return len(self.string + str(a))
 
t1 = T1()
t2 = T2()
print(t1.total(6))
print(t2.total(6))

class Building:
  def __init__(self,w,c,n=0):
    self.what = w
    self.color = c
    self.numbers = n
    self.mwhere(n)
  def mwhere(self,n):
    if n <= 0:
      self.where = "отсутствуют"
    elif 0 < n < 100:
      self.where = "малый склад"
    else:
      self.where = "основной склад"
  def plus(self,p):
    self.numbers = self.numbers + p
    self.mwhere(self.numbers)
  def minus(self,m):
    self.numbers = self.numbers - m
    self.mwhere(self.numbers)

m1 = Building("доски", "белые",50)
m2 = Building("доски", "коричневые", 300)
m3 = Building("кирпичи","белые")

print (m1.what,m1.color,m1.where)
print (m2.what,m2.color,m2.where)
print (m3.what,m3.color,m3.where)

m1.plus(500)
print (m1.numbers, m1.where)

class Person:
    def __init__(self, n, s, a):
        self.name = n
        self.surname = s
        self.age = a
 
 
p1 = Person("Катя", "Кузнецова", 17)
p2 = Person("Лера", "Строкова", 18)

print(p1.name, p1.surname, p1.age)
print(p2.name, p2.surname, p2.age)

class Things:
  def __init__(self,n,t):
    self.namething = n
    self.total = t

th1 = Things("table", 5)
th2 = Things("computer", 7)

print(th1.namething,th1.total) 
print(th2.namething,th2.total)

th1.color = "green"
th2.color = 'brown' 

print(th1.color)
print(th2.color)

class Table:
  def __init__(self,l,w,h):
    self.long = l
    self.width = w
    self.height = h
  def outing(self):
      print(self.long,self.width,self.height)

class Kitchen(Table):
  def howplaces(self,n):
        if n < 2:
          print ("It is not kitchen table")
        else:
          self.places = n
  def outplases(self):
        print(self.places)

class DeskTable(Table):
  def howplaces(self,n):
        if n < 1:
          print ("It is not it table")
        else:
          self.places = n
  def outplases(self):
        print(self.places)

t_room1 = Kitchen(2,1,0.5)
t_room1.outing()
t_room1.howplaces(5)
t_room1.outplases()

t_2 = Table(1,3,0.7)
t_2.outing()

class Figure:
    color = 'white'
    def change_color(self, new_color):
        self.color = new_color

obj1 = Figure()
print(obj1.color)

obj1.change_color('red')
print(obj1.color)

class Oval(Figure):
    def __init__(self, l, w):
        self.lenght = l
        self.wight = w
oval_1 = Oval(10, 15)
print(oval_1.lenght, oval_1.wight)

class Square(Figure):
    def __init__(self, l, w):
        self.lenght = l
        self.wight = w
square_1 = Square(90, 90)
print(square_1.lenght, square_1.wight)